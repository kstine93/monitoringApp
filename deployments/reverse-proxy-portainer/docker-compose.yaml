#Docker-compose for creating BI Monitoring application

version: "3"

networks:
  grafana:

services:
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    #Note: root user specified here to ensure that Prometheus has WRITE permissions on the storage volume.
    #It's not ideal to have root permissions here - try to find a better solution.
    user: root
    volumes:
      - /var/lib/docker/volumes/bi-monitoring-prometheus/_data/prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/lib/docker/volumes/bi-monitoring-prometheus/_data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.external-url=/prometheus/"
      - "--web.route-prefix=/prometheus/"
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - grafana

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    networks:
      - grafana
    volumes:
      - /var/lib/docker/volumes/bi-monitoring-grafana/_data:/etc/grafana/provisioning
      #NOTE: Use the following volume reference as a template to create new dashboard subdirectories as needed:
      # - /var/lib/docker/volumes/bi-monitoring-grafana/_data/dashboards/batch_script_monitoring:/etc/grafana/provisioning/dashboards/batch_script_monitoring
    environment:
      - "GF_DEFAULT_APP_MODE=development"
      - "GF_LOG_LEVEL=debug"
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=<< PUT PASSWORD FOR GRAFANA HERE >>"
      - "GF_SERVER_ROOT_URL=http://localhost/grafana"
      - "GF_SERVER_SERVE_FROM_SUB_PATH=true"
    ports:
      - 3000:3000
  
  prom-pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    command:
      - "--web.external-url=/pushgateway/"
      - "--web.route-prefix=/pushgateway/"
    ports:
      - 9091:9091
    networks:
      - grafana

  nginx-ingress:
    image: nginx:latest
    container_name: nginx-ingress
    hostname: ingress-monitoring
    restart: always
    volumes:
      - /var/lib/docker/volumes/bi-monitoring-nginx/_data/html/:/usr/share/nginx/html/:ro
      - /var/lib/docker/volumes/bi-monitoring-nginx/_data/conf.d/:/etc/nginx/conf.d/:ro
      - /var/lib/docker/volumes/bi-monitoring-nginx/_data/auth/:/etc/nginx/auth/:ro
      - /var/lib/docker/volumes/bi-monitoring-nginx/_data/certbot/:/var/www/certbot/:ro
      - /var/lib/docker/volumes/bi-monitoring-nginx/_data/ssl/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
    networks:
      - grafana

