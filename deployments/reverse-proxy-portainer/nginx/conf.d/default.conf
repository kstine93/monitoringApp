# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream grafana {
    server 	grafana:3000;
}

upstream prometheus {
    server prometheus:9090;
}

upstream pushgateway {
    server 	pushgateway:9091;
}

server {
    listen 80;
    listen [::]:80;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /grafana/ {
        #NOTE: Grafana has its own authentication system that does not interact well
        #with nginx's. Therefore, basic authentication is not used for this endpoint-
        #Grafana's built-in authentication system will be used instead.
        proxy_set_header Host $http_host;
        proxy_pass http://grafana;
    }

    location /prometheus/ {
        auth_basic "Prometheus";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;

        proxy_set_header Host $http_host;
        proxy_pass http://prometheus;
    }

    location /pushgateway/ {
        auth_basic "Prometheus Pushgateway";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;

        proxy_set_header Host $http_host;
        proxy_pass http://pushgateway;
    }

    location /grafana/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://grafana;
    }

}

# NOTE: The following commented-out code is from installing HTTPS on this
# nginx reverse proxy, rather than using the Nginx Proxy Manager.
# Keeping this here in case we want it later.
#
# server {
#     listen 443 default_server ssl;
#     listen [::]:443 ssl;
#     http2 on;

#     server_name bi-monitoring-2.mydomain.com www.bi-monitoring-2.mydomain.com;

#     ssl_certificate /etc/nginx/ssl/live/bi-monitoring-2.mydomain.com/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/bi-monitoring-2.mydomain.com/privkey.pem;

#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }

#     location /prometheus {
#         auth_basic "Prometheus";
#         auth_basic_user_file /etc/nginx/auth/.htpasswd;

#         proxy_pass http://prometheus;
#     }

#     location /grafana {
#         #NOTE: Grafana has its own authentication system that does not interact well
#         #with nginx's. Therefore, basic authentication is not used for this endpoint-
#         #Grafana's built-in authentication system will be used instead.
#         proxy_set_header Host $http_host;
#         proxy_pass http://grafana;
#     }

#     location /pushgateway {
#         auth_basic "Prometheus Pushgateway";
#         auth_basic_user_file /etc/nginx/auth/.htpasswd;

#         proxy_pass http://pushgateway;
#     }

#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }

# }

